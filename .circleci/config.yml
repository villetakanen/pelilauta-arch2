version: 2.1

workflows:
  version: 2
  build:
   jobs:
     - build:
         filters:
           branches:
             only: master

jobs:
  build:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: install-npm
          command: 'npm install'
      - run:
          name: create-dotenv
          command: echo 'SNOWPACK_PUBLIC_FIREBASE_API_KEY = "${SNOWPACK_PUBLIC_FIREBASE_API_KEY}"\nSNOWPACK_PUBLIC_FIREBASE_AUTH_DOMAIN = "${SNOWPACK_PUBLIC_FIREBASE_AUTH_DOMAIN}"\nSNOWPACK_PUBLIC_FIREBASE_DATABASE_URL = "${SNOWPACK_PUBLIC_FIREBASE_DATABASE_URL}"\nSNOWPACK_PUBLIC_FIREBASE_PROJECT_ID = "${SNOWPACK_PUBLIC_FIREBASE_PROJECT_ID}"\nSNOWPACK_PUBLIC_FIREBASE_STORAGE_BUCKET = "${SNOWPACK_PUBLIC_FIREBASE_STORAGE_BUCKET}"\nSNOWPACK_PUBLIC_FIREBASE_MESSAGING_SENDER_ID ="${SNOWPACK_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}"\nSNOWPACK_PUBLIC_FIREBASE_APP_ID = "${SNOWPACK_PUBLIC_FIREBASE_APP_ID}"\nSNOWPACK_PUBLIC_FIREBASE_MEASUREMENT_ID = "${SNOWPACK_PUBLIC_FIREBASE_MEASUREMENT_ID}"' > .env && echo .env
      - run:
          name: npm-run-build
          command: 'npm run build'
      - run:
          name: setup-git
          command: 'git config user.email "${GIT_EMAIL_ADDRESS}" && git config user.name "${GIT_USER_NAME}"'
      - run:
          name: npm-run-release
          command: 'npm run release'
      - run:
          name: git-skip-ci
          command: 'git commit -m "chore: [skip ci] for release" --allow-empty'
      - run:
          name: npm-run-publish
          command: 'git push --follow-tags origin master'
      - run:
          name: Firebase-Deploy
          command: 'npx firebase deploy --token "$FIREBASE_TOKEN" --only hosting'

